# Generated by roxygen2: do not edit by hand

export(loadSignature)
import(utils)
importFrom(utils,"#")
importFrom(utils,"#@examples")
importFrom(utils,"(")
importFrom(utils,"(\"Loading")
importFrom(utils,"(cell_types")
importFrom(utils,"(dataset,")
importFrom(utils,"(message(error_mssg_dataset))")
importFrom(utils,"(names(sigsBrain)))")
importFrom(utils,"(names(sigsBrain[[dataset]])))")
importFrom(utils,"(paste(\"Loading")
importFrom(utils,"<-")
importFrom(utils,"=")
importFrom(utils,"==")
importFrom(utils,"\":\",")
importFrom(utils,"\"Neurons\")")
importFrom(utils,"\"all\")")
importFrom(utils,"cell_types)]")
importFrom(utils,"cell_types]}")
importFrom(utils,"data(\"sigsBrain\")")
importFrom(utils,"data\")")
importFrom(utils,"dataset))")
importFrom(utils,"dataset,")
importFrom(utils,"datset:\",")
importFrom(utils,"else")
importFrom(utils,"for\",")
importFrom(utils,"function")
importFrom(utils,"if")
importFrom(utils,"if(dataset%in%names(sigsBrain))")
importFrom(utils,"length(cell_types))")
importFrom(utils,"length(intersect(cell_types,")
importFrom(utils,"loadSignature(\"F5\",")
importFrom(utils,"message(error_mssg_ct)")
importFrom(utils,"names(sigsBrain[[dataset]]))")
importFrom(utils,"names(sigsBrain[[dataset]])))")
importFrom(utils,"options:\",")
importFrom(utils,"paste(\"ERROR:")
importFrom(utils,"return(sig)")
importFrom(utils,"sig<-")
importFrom(utils,"sigsBrain[[dataset]][,")
importFrom(utils,"suppressWarnings(if")
importFrom(utils,"{")
importFrom(utils,"{message")
importFrom(utils,"}")
importFrom(utils,F5)
importFrom(utils,Retriving)
importFrom(utils,all)
importFrom(utils,cell)
importFrom(utils,cell_types)
importFrom(utils,data)
importFrom(utils,dataset)
importFrom(utils,error_mssg_ct)
importFrom(utils,error_mssg_dataset)
importFrom(utils,from)
importFrom(utils,loadSignature)
importFrom(utils,message)
importFrom(utils,neurons)
importFrom(utils,of)
importFrom(utils,one)
importFrom(utils,options)
importFrom(utils,please)
importFrom(utils,the)
importFrom(utils,toString)
importFrom(utils,type)
importFrom(utils,types)
importFrom(utils,use)
importFrom(utils,valid)
